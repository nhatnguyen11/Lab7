 clang-7 -pthread -lm -o main lab7.c main.c
 ./main
Enter array length 1
Invalid
Enter array length 3
Enter value 4
Enter value 5
Enter value 2
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 1
Array: 
[2, 4, 5, ] 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 2
Value found: 2
Position: 0
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 2
Enter value to add in array: 3
[2 4 5 3 ]
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 1
Array: 
[2, 3, 4, 5, ] 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 5
Value found: 5
Position: 3
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 4
 valgrind --leak-check=full ./main
==98== Memcheck, a memory error detector
==98== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==98== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==98== Command: ./main
==98== 
Enter array length 4
Enter value 9
Enter value 6
Enter value 7
Enter value 8
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 1
Array: 
[6, 7, 8, 9, ] 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 6
Value found: 6
Position: 0
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 2
Enter value to add in array: 12
==98== Invalid read of size 4
==98==    at 0x400A3B: addItem (in /home/runner/Lab7/main)
==98==    by 0x400CA9: main (in /home/runner/Lab7/main)
==98==  Address 0x57ea8d0 is 0 bytes after a block of size 16 alloc'd
==98==    at 0x4C31B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==98==    by 0x4006CA: createAndFill (in /home/runner/Lab7/main)
==98==    by 0x400C38: main (in /home/runner/Lab7/main)
==98== 
[6 7 8 9 12 ]
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 1
Array: 
[6, 7, 8, 9, 12, ] 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 2
Enter value to add in array: 5
[6 7 8 9 12 5 ]
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 1
Array: 
[5, 6, 7, 8, 9, 12, ] 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 8
Value found: 8
Position: 3
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 12
Value found: 12
Position: 5
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 1
Value not found 
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 3
Enter a value to read 7
Value found: 7
Position: 2
The menu choices are
1. printSortedArray 
2. addItem
3. readValue
4. Quit the program
Choose: 4
==98== 
==98== HEAP SUMMARY:
==98==     in use at exit: 0 bytes in 0 blocks
==98==   total heap usage: 5 allocs, 5 frees, 2,108 bytes allocated
==98== 
==98== All heap blocks were freed -- no leaks are possible
==98== 
==98== For counts of detected and suppressed errors, rerun with: -v
==98== ERROR SUMMARY: 2 errors from 1 contexts (suppressed: 0 from 0)
 
